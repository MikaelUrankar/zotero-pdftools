--- CMakeLists.txt.orig	2022-03-11 18:54:36.095950000 +0100
+++ CMakeLists.txt	2022-03-11 18:54:36.105529000 +0100
@@ -1,6 +1,6 @@ project(poppler)
 project(poppler)
 
-cmake_minimum_required(VERSION 3.1.0 FATAL_ERROR)
+#cmake_minimum_required(VERSION 3.1.0 FATAL_ERROR)
 
 set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)
 
@@ -13,8 +13,8 @@ else()
 if (WIN32)
   message("-- Using win32 threads")
 else()
-  set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
-  set(THREADS_PREFER_PTHREAD_FLAG TRUE)
+#  set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
+#  set(THREADS_PREFER_PTHREAD_FLAG TRUE)
   find_package(Threads)
 endif()
 include(TestBigEndian)
@@ -95,13 +95,13 @@ set(WITH_FONTCONFIGURATION_FONTCONFIG OFF)
 string(TOLOWER "${FONT_CONFIGURATION}" font_configuration)
 set(WITH_FONTCONFIGURATION_WIN32 OFF)
 set(WITH_FONTCONFIGURATION_FONTCONFIG OFF)
-if(font_configuration STREQUAL "win32")
-  set(WITH_FONTCONFIGURATION_WIN32 ON)
-elseif(font_configuration STREQUAL "fontconfig")
-  set(WITH_FONTCONFIGURATION_FONTCONFIG ON)
-else()
-  message(FATAL_ERROR "Invalid font configuration setting: ${FONT_CONFIGURATION}")
-endif()
+#if(font_configuration STREQUAL "win32")
+#  set(WITH_FONTCONFIGURATION_WIN32 ON)
+#elseif(font_configuration STREQUAL "fontconfig")
+#  set(WITH_FONTCONFIGURATION_FONTCONFIG ON)
+#else()
+#  message(FATAL_ERROR "Invalid font configuration setting: ${FONT_CONFIGURATION}")
+#endif()
 
 if(CMAKE_USE_PTHREADS_INIT OR WIN32)
   set(MULTITHREADED ON)
@@ -116,9 +116,9 @@ macro_bool_to_01(ENABLE_SPLASH HAVE_SPLASH)
 set(GLIB_REQUIRED "2.41")
 
 macro_bool_to_01(ENABLE_SPLASH HAVE_SPLASH)
-find_package(Freetype REQUIRED)
+#find_package(Freetype REQUIRED)
 if(WITH_FONTCONFIGURATION_FONTCONFIG)
-  find_package(Fontconfig REQUIRED)
+#  find_package(Fontconfig REQUIRED)
 endif()
 macro_optional_find_package(JPEG)
 macro_optional_find_package(PNG)
@@ -489,7 +489,7 @@ if(CMAKE_USE_PTHREADS_INIT)
 endif()
 target_link_libraries(poppler LINK_PRIVATE ${poppler_LIBS})
 if(CMAKE_USE_PTHREADS_INIT)
-   target_link_libraries(poppler LINK_PRIVATE Threads::Threads)
+#   target_link_libraries(poppler LINK_PRIVATE Threads::Threads)
 endif()
 install(TARGETS poppler RUNTIME DESTINATION bin LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
